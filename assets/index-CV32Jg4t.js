import{ɵ as d,D as k,a as h,b as F,c as a,d as e,e as s,f as i,g as t,h as l}from"./index-D3yi40MR.js";const E=`<pre class="shiki shiki-themes github-light github-dark-default" style="background-color:#fff;--shiki-dark-bg:#0d1117;color:#24292e;--shiki-dark:#e6edf3" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#FF7B72">import</span><span style="color:#24292E;--shiki-dark:#E6EDF3"> { NavigationEnd } </span><span style="color:#D73A49;--shiki-dark:#FF7B72">from</span><span style="color:#032F62;--shiki-dark:#A5D6FF"> '@angular/router'</span><span style="color:#24292E;--shiki-dark:#E6EDF3">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF7B72">import</span><span style="color:#24292E;--shiki-dark:#E6EDF3"> { fromRouterEvent } </span><span style="color:#D73A49;--shiki-dark:#FF7B72">from</span><span style="color:#032F62;--shiki-dark:#A5D6FF"> '@mixin-ui/cdk'</span><span style="color:#24292E;--shiki-dark:#E6EDF3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF7B72">const</span><span style="color:#005CC5;--shiki-dark:#79C0FF"> navigationEnd</span><span style="color:#D73A49;--shiki-dark:#FF7B72"> =</span><span style="color:#6F42C1;--shiki-dark:#D2A8FF"> fromRouterEvent</span><span style="color:#24292E;--shiki-dark:#E6EDF3">(NavigationEnd);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6EDF3">navigationEnd.</span><span style="color:#6F42C1;--shiki-dark:#D2A8FF">subscribe</span><span style="color:#24292E;--shiki-dark:#E6EDF3">(console.log);</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#8B949E">// Results in:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#8B949E">// A NavigationEnd event object logged to the console every time</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#8B949E">// the Angular Router emits a NavigationEnd event during navigation.</span></span></code></pre>`,y=`<pre class="shiki shiki-themes github-light github-dark-default" style="background-color:#fff;--shiki-dark-bg:#0d1117;color:#24292e;--shiki-dark:#e6edf3" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#FF7B72">import</span><span style="color:#24292E;--shiki-dark:#E6EDF3"> { fromAfterNextRender } </span><span style="color:#D73A49;--shiki-dark:#FF7B72">from</span><span style="color:#032F62;--shiki-dark:#A5D6FF"> '@mixin-ui/cdk'</span><span style="color:#24292E;--shiki-dark:#E6EDF3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF7B72">const</span><span style="color:#005CC5;--shiki-dark:#79C0FF"> afterNextRender</span><span style="color:#D73A49;--shiki-dark:#FF7B72"> =</span><span style="color:#6F42C1;--shiki-dark:#D2A8FF"> fromAfterNextRender</span><span style="color:#24292E;--shiki-dark:#E6EDF3">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6EDF3">afterNextRender.</span><span style="color:#6F42C1;--shiki-dark:#D2A8FF">subscribe</span><span style="color:#24292E;--shiki-dark:#E6EDF3">(console.log);</span></span></code></pre>`,n=class n{constructor(){this.router=E,this.render=y}};n.ɵfac=function(r){return new(r||n)},n.ɵcmp=d({type:n,selectors:[["app-operators"]],decls:15,vars:2,consts:[[3,"src"]],template:function(r,o){r&1&&(a(0,"docs-page")(1,"p"),e(2," Custom RxJS operators that provide declarative access to browser APIs and framework environment features. These operators allow you to compose and transform data streams while working with browser and Angular functionality in a reactive way. "),s(),a(3,"h2"),e(4,"Examples"),s(),a(5,"h3"),e(6,"Router API"),s(),a(7,"p"),e(8,"Creates an observable that emits specific Angular Router events of the provided type:"),s(),i(9,"docs-code",0),a(10,"h3"),e(11,"Render API"),s(),a(12,"p"),e(13,"Creates an Observable that emits and completes next time the application finishes rendering. This operator utilizes Angular's afterNextRender api: "),s(),i(14,"docs-code",0),s()),r&2&&(t(9),l("src",o.router),t(5),l("src",o.render))},dependencies:[k,h,F],encapsulation:2,changeDetection:0});let p=n;export{p as default};
